name: Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GEMINI_PROJECT: project
  GEMINI_LOCATION: location
  GEMINI_MODEL: model

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          version: "0.7.14"
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      - name: Check typing with mypy
        run: uv run mypy --install-types --non-interactive core
      - name: Install pgvector
        run: |
          sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh -y
          sudo apt-get install postgresql-16-pgvector
      - name: Run tests
        run: uv run pytest

  build:
    name: Build & Push
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest

    permissions:
      contents: "write"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          pre_release_branches: dev

      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          project_id: "pas-shared"
          workload_identity_provider: projects/1086645519617/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider
          service_account: github-actions-service-account@pas-shared.iam.gserviceaccount.com
          access_token_lifetime: 600s

      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: europe-west4-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - id: docker-push-tagged
        name: Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            europe-west4-docker.pkg.dev/pas-shared/pas/core-api:${{ steps.tag_version.outputs.new_tag }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
