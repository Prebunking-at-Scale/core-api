[project]
name = "core-api"
version = "0.1.0"
description = "The core API service for the PAS project."
readme = "README.md"
requires-python = ">=3.13"

dependencies = [
    "click>=8.1.0",
    "google-genai>=1.25.0",
    "httpx>=0.27.0",
    "harmful-claim-finder",
    "email-validator>=2.2.0",
    "google-genai>=1.25.0",
    "litestar[jwt,opentelemetry,pydantic,standard,structlog]>=2.16.0",
    "psycopg[binary,pool]>=3.2.9",
    "sentence-transformers>=5.0.0",
    "torch>=2.7.1",
    "bcrypt>=4.3.0",
    "python-i18n>=0.3.9",
    "langid>=1.1.6",
]

[project.scripts]
start-narratives = "core.cli:start_narratives"

[tool.setuptools.packages.find]
include = ["core*"]

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "ruff>=0.12.0",
    "taskipy>=1.14.1",
    "testing-postgresql>=1.3.0",
    "polyfactory>=2.22.1",
    "pytest-cov>=6.2.1",
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.uv.sources]
torch = [{ index = "pytorch-cpu" }]
harmful-claim-finder = { git = "https://github.com/Prebunking-at-Scale/harmful-claim-finder.git", tag = "v0.1.0" }

[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = "./"
testpaths = ["tests"]
filterwarnings = []

[tool.ruff]
extend-select = ["I"]

[tool.taskipy.tasks]
test = { cmd = "pytest", help = "runs all unit tests" }
lint = { cmd = "ruff app", help = "confirms code style using pylint" }

[[tool.mypy.overrides]]
module = ["harmful_claim_finder.*"]
follow_untyped_imports = true

[[tool.mypy.overrides]]
module = ["i18n.*"]
follow_untyped_imports = true

[[tool.mypy.overrides]]
module = ["langid.*"]
follow_untyped_imports = true